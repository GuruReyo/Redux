{"ast":null,"code":"// import { connect } from 'react-redux';\n// import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n// const redux=require('redux');\n\nconst initialState = {\n  counter: 0,\n  showCounter: true,\n  isAuthenticated\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer =((state=initialState,action)=>{\n//     if (action.type==='increment'){\n//         return{\n//             counter : state.counter+1,\n//             showCounter:state.showCounter,\n//         }\n//     }\n//     if(action.type==='decrement'){\n//         return{\n//             counter : state.counter -1,\n//             showCounter:state.showCounter,\n//         }\n//     }\n//     if(action.type === 'toggle'){\n//         return{\n//             showCounter: !state.showCounter,\n//             counter: state.counter,\n//         }\n//     }\n//     if(action.type==='increase'){\n//         return{\n//             // ...state,\n//             counter:state.counter+action.amount,\n//             showCounter:state.showCounter,\n//         }\n//     }\n//     if(action.type==='decrease'){\n//         return {\n//             ...state,\n//             counter: state.counter-10\n//         }\n//     }\n//     return state;\n// });\n\n// const store =createStore(counterSlice.reducer);\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;\n\n// export connect()","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","isAuthenticated","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"sources":["C:/Users/VenkataGuravaiahNall/OneDrive - Zeta Global/Documents/Redux/react-redux-project/01-starting-project/src/store/index.js"],"sourcesContent":["// import { connect } from 'react-redux';\r\n// import { createStore } from 'redux';\r\nimport { createSlice  ,configureStore} from '@reduxjs/toolkit';\r\n// const redux=require('redux');\r\n\r\nconst initialState={counter : 0 , showCounter:true , isAuthenticated};\r\nconst counterSlice=createSlice({\r\n    name:'counter',\r\n    initialState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++;\r\n        },\r\n        decrement(state){\r\n            state.counter--;\r\n        },\r\n        increase(state,action){\r\n            state.counter=state.counter+action.payload;\r\n        },\r\n        toggleCounter(state){\r\n            state.showCounter=!state.showCounter;\r\n        },\r\n    }\r\n})\r\n\r\n// const counterReducer =((state=initialState,action)=>{\r\n//     if (action.type==='increment'){\r\n//         return{\r\n//             counter : state.counter+1,\r\n//             showCounter:state.showCounter,\r\n//         }\r\n//     }\r\n//     if(action.type==='decrement'){\r\n//         return{\r\n//             counter : state.counter -1,\r\n//             showCounter:state.showCounter,\r\n//         }\r\n//     }\r\n//     if(action.type === 'toggle'){\r\n//         return{\r\n//             showCounter: !state.showCounter,\r\n//             counter: state.counter,\r\n//         }\r\n//     }\r\n//     if(action.type==='increase'){\r\n//         return{\r\n//             // ...state,\r\n//             counter:state.counter+action.amount,\r\n//             showCounter:state.showCounter,\r\n//         }\r\n//     }\r\n//     if(action.type==='decrease'){\r\n//         return {\r\n//             ...state,\r\n//             counter: state.counter-10\r\n//         }\r\n//     }\r\n//     return state;\r\n// });\r\n\r\n// const store =createStore(counterSlice.reducer);\r\nconst store =configureStore({\r\n    reducer: counterSlice.reducer,\r\n});\r\n\r\nexport const counterActions=counterSlice.actions;\r\nexport default store;\r\n\r\n// export connect()\r\n\r\n"],"mappings":"AAAA;AACA;AACA,SAASA,WAAW,EAAGC,cAAc,QAAO,kBAAkB;AAC9D;;AAEA,MAAMC,YAAY,GAAC;EAACC,OAAO,EAAG,CAAC;EAAGC,WAAW,EAAC,IAAI;EAAGC;AAAe,CAAC;AACrE,MAAMC,YAAY,GAACN,WAAW,CAAC;EAC3BO,IAAI,EAAC,SAAS;EACdL,YAAY;EACZM,QAAQ,EAAC;IACLC,SAASA,CAACC,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAC;MACZA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAC;MAClBH,KAAK,CAACP,OAAO,GAACO,KAAK,CAACP,OAAO,GAACU,MAAM,CAACC,OAAO;IAC9C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAC;MAChBA,KAAK,CAACN,WAAW,GAAC,CAACM,KAAK,CAACN,WAAW;IACxC;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMY,KAAK,GAAEf,cAAc,CAAC;EACxBgB,OAAO,EAAEX,YAAY,CAACW;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAACZ,YAAY,CAACa,OAAO;AAChD,eAAeH,KAAK;;AAEpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}